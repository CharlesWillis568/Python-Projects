import pandas as pd

rankings = pd.read_csv('rankings_cp_1500.csv')

#print(rankings.head())

usage_stats = pd.read_csv('usage_data.csv')

#print(usage_stats.head())

pokemon_typings_and_weaknesses = pd.read_csv('typings_weaknesses.csv')

#print(pokemon_typings_and_weaknesses.head())

usage_typings_and_weaknesses = pd.merge(usage_stats, pokemon_typings_and_weaknesses, how = 'inner', on = 'Pokemon')

print(usage_typings_and_weaknesses.head(1))

usage_typings_and_weaknesses.fillna('n/a', inplace=True)

usage_typings_and_weaknesses.to_csv('usage_typings_and_weaknesses.csv')



tournament_details = pd.read_csv('tournament_detail.csv')

#print(tournament_details.isnull())

#print(tournament_details[3:8])

tournament_details['Region'].fillna('North America', limit = 4, inplace = True)
#print(tournament_details)

total_tournament_details = pd.merge(usage_typings_and_weaknesses, tournament_details, how = 'inner', on = 'Tournament')

total_tournament_details['Day 1 Usage'] = total_tournament_details['Day 1 Usage'].str.strip('%')


total_tournament_details['Day 1 Usage'] = pd.to_numeric(total_tournament_details['Day 1 Usage'])

total_tournament_details['Day 1 Usage'] = (total_tournament_details['Day 1 Usage']/100)
#print(total_tournament_details['Day 1 Usage'])

total_tournament_details['count_of_species'] = (total_tournament_details['Number of Participants']) * ((total_tournament_details['Day 1 Usage']))

#print(total_tournament_details.head())

total_tournament_details.to_csv('total_tournament_data_ws.csv')

matchups = pd.read_csv('Top 200 vs Meta - Matchup Scores.csv')

#print(matchups.head())

matchups['Pokemon'] = matchups['Unnamed: 0']

del matchups['Unnamed: 0']

meta_list = []

for i in matchups.head(): meta_list.append(i)

#print(meta_list)

del meta_list[-1]

#print(meta_list)

matchups_shaped = pd.melt(frame=matchups, id_vars='Pokemon', value_vars=meta_list, value_name = 'Battle Rating', var_name='Opposing Pokemon' )

#print(matchups_shaped.dtypes)

matchups_num = matchups_shaped.select_dtypes(int)
#print(matchups_num)

matchups_shaped['Wins'] = (matchups_num >= 500).sum(axis=1)
#print(matchups_shaped.head())

matchups_shaped['Loses'] = (matchups_num <= 500).sum(axis=1)
#print(matchups_shaped.head())
